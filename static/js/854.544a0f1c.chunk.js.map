{"version":3,"file":"static/js/854.544a0f1c.chunk.js","mappings":"8XAgBaA,EAAsB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UAAcC,GAAW,YAC7D,GAAsDC,EAAAA,EAAAA,UAAS,IAA/D,eAAOC,EAAP,KACA,GADA,MAC0BD,EAAAA,EAAAA,UAAS,KAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAwBH,EAAAA,EAAAA,UAAS,GAAjC,eAAOI,EAAP,KAAaC,EAAb,KACMC,EAAa,SAACC,GAClB,IAAIC,EAAI,IAAIC,KAAKF,GACjB,MACE,CAACC,EAAEE,WAAa,EAAGF,EAAEG,UAAWH,EAAEI,eAAeC,KAAK,KACtD,IACA,CAACL,EAAEM,WAAYN,EAAEO,aAAcP,EAAEQ,cAAcH,KAAK,IAEvD,EASD,OACE,UAACI,EAAA,GAAD,kBAAUlB,GAAV,eACE,SAAC,IAAD,WACE,SAACmB,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,MAArB,UACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,mDACA,SAACA,EAAA,EAAD,kBACA,SAACA,EAAA,EAAD,gCACA,SAACA,EAAA,EAAD,+CAGJ,SAACC,EAAA,EAAD,UACG3B,EAAU4B,MAAM,EAAGxB,GAAOyB,KAAI,SAACC,GAAD,OAC7B,UAACL,EAAA,EAAD,CACEM,OAAK,EAELC,UAAyD,IAA/C7B,EAAoB8B,QAAQH,EAASI,KAHjD,WAKE,SAACR,EAAA,EAAD,WACE,SAAC,KAAD,CAAMS,GAAE,kCAA6BL,EAASI,KAA9C,UACE,SAACd,EAAA,EAAD,CACEC,GAAI,CACFe,WAAY,SACZC,QAAS,QAHb,UAME,SAACC,EAAA,EAAD,CAAYC,MAAM,cAAcC,QAAQ,QAAxC,SACGV,EAASW,mBAMlB,SAACf,EAAA,EAAD,WACE,UAAC,KAAD,CAAMS,GAAE,kCAA6BL,EAASI,KAA9C,UACGJ,EAASI,IAAK,UAKjB,UAACR,EAAA,EAAD,YACA,UAAC,KAAD,CAAMS,GAAE,kCAA6BL,EAASI,KAA9C,UAAsD1B,EAAWsB,EAASY,WAA1E,wBADA,QAIF,SAAC,KAAD,CAAMP,GAAE,kCAA6BL,EAASI,KAA9C,UACE,SAACR,EAAA,EAAD,UAAYlB,EAAWsB,EAASa,iBA9B7Bb,EAASI,IAHa,cAyCvC,SAACU,EAAA,EAAD,CACEC,UAAU,MACVC,MAAO9C,EAAU+C,OACjBC,aA9DmB,SAACC,EAAOC,GAC/B3C,EAAQ2C,EACT,EA6DKC,oBAnEoB,SAACF,GACzB5C,EAAS4C,EAAMG,OAAOC,MACvB,EAkEK/C,KAAMA,EACNgD,YAAalD,EACbmD,mBAAoB,CAAC,EAAG,GAAI,SAInC,E,UC9FYC,EAAsB,SAACC,GAAD,OACjC,UAACrC,EAAA,GAAD,kBAASqC,GAAT,eACE,UAACrC,EAAA,EAAD,CACEC,GAAI,CACFe,WAAY,SACZC,QAAS,OACTqB,eAAgB,gBAChBC,SAAU,OACVC,GAAI,GANR,WASE,SAACtB,EAAA,EAAD,CAAYjB,GAAI,CAAEuC,EAAG,GAAKpB,QAAQ,KAAlC,2CAGA,SAACpB,EAAA,EAAD,CAAKC,GAAI,CAAEuC,EAAG,GAAd,UACE,SAACC,EAAA,EAAD,CAAQtB,MAAM,UAAUC,QAAQ,YAAhC,UACE,UAAC,KAAD,CACEsB,MAAO,CAAEC,eAAgB,OAAQxB,MAAO,SACxCJ,GAAG,yBAFL,UAIG,IAJH,kDAUN,SAACf,EAAA,EAAD,CAAKC,GAAI,CAAE2C,GAAI,QA1BgB,E,cCJ3BC,EAAAA,EAAAA,MAcAA,EAAAA,EAAAA,MAcAA,EAAAA,EAAAA,MAcAA,EAAAA,EAAAA,MAcAA,EAAAA,EAAAA,MAcAA,EAAAA,EAAAA,MAcAA,EAAAA,EAAAA,MAcAA,EAAAA,EAAAA,MAcAA,EAAAA,EAAAA,MAcAA,EAAAA,EAAAA,K,mBCtFR,MAjCA,WACE,IAAOC,GAAkBC,EAAAA,EAAAA,KAAa,SAAAC,GAAK,OAAEA,EAAMC,OAAR,IAApCH,gBACDI,GAAWC,EAAAA,EAAAA,MAMjB,OALAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,OACTH,GAASI,EAAAA,EAAAA,MACV,GAAC,CAACJ,KAGD,+BACE,SAACK,EAAA,EAAD,CAAeC,MAAOA,EAAAA,EAAtB,UACE,SAAC,IAAD,WAEI,SAACxD,EAAA,EAAD,CACEyB,UAAU,OACVxB,GAAI,CACFwD,SAAU,EACVC,GAAI,GAJR,UAOE,UAACC,EAAA,EAAD,CAAWC,UAAU,EAArB,WACE,SAACxB,EAAD,KACA,SAACpC,EAAA,EAAD,CAAKC,GAAI,CAAE2C,GAAI,GAAf,SACmB,MAAjBE,GAAwB,SAACnE,EAAD,CAAqBC,UAAWkE,EAAgBe,OAAU,iBASnG,C","sources":["components/customer/customer-list-results.js","components/customer/customer-list-toolbar.js","__mocks__/customers.js","pages/Products.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\n\nexport const CustomerListResults = ({ customers, ...rest }) => {\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const formatDate = (date) => {\n    var d = new Date(date);\n    return (\n      [d.getMonth() + 1, d.getDate(), d.getFullYear()].join(\"/\") +\n      \" \" +\n      [d.getHours(), d.getMinutes(), d.getSeconds()].join(\":\")\n    );\n  };\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Card {...rest}>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Tên loại sản phẩm</TableCell>\n                <TableCell>Id</TableCell>\n                <TableCell>Ngày tạo</TableCell>\n                <TableCell>Ngày cập nhật</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {customers.slice(0, limit).map((customer) => (\n                <TableRow\n                  hover\n                  key={customer._id}\n                  selected={selectedCustomerIds.indexOf(customer._id) !== -1}\n                >\n                  <TableCell>\n                    <Link to={`/admin/producttype/item/${customer._id}`}>\n                      <Box\n                        sx={{\n                          alignItems: \"center\",\n                          display: \"flex\",\n                        }}\n                      >\n                        <Typography color=\"textPrimary\" variant=\"body1\">\n                          {customer.name_type}\n                        </Typography>\n                      </Box>\n                    </Link>\n                  </TableCell>\n\n                  <TableCell>\n                    <Link to={`/admin/producttype/item/${customer._id}`}>\n                      {customer._id}{\" \"}\n                    </Link>\n                  </TableCell>\n\n \n                    <TableCell>\n                    <Link to={`/admin/producttype/item/${customer._id}`}>{formatDate(customer.createdAt)}                  </Link>P\n                    </TableCell>\n\n                  <Link to={`/admin/producttype/item/${customer._id}`}>\n                    <TableCell>{formatDate(customer.updatedAt)}</TableCell>\n                  </Link>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={customers.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nCustomerListResults.propTypes = {\n  customers: PropTypes.array.isRequired,\n};\n","import {\n  Box,\n  Button,\n  Typography,\n} from \"@mui/material\";\n\nimport { Link } from \"react-router-dom\";\n\nexport const CustomerListToolbar = (props) => (\n  <Box {...props}>\n    <Box\n      sx={{\n        alignItems: \"center\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        m: -1,\n      }}\n    >\n      <Typography sx={{ m: 1 }} variant=\"h4\">\n        Loại Sản phẩm\n      </Typography>\n      <Box sx={{ m: 1 }}>\n        <Button color=\"primary\" variant=\"contained\">\n          <Link\n            style={{ textDecoration: \"none\", color: \"white\" }}\n            to=\"/admin/producttype/new\"\n          >\n            {\" \"}\n            Thêm loại sản phẩm\n          </Link>\n        </Button>\n      </Box>\n    </Box>\n    <Box sx={{ mt: 3 }}>\n    </Box>\n  </Box>\n);\n","import { v4 as uuid } from 'uuid';\n\nexport const customers = [\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'West Virginia',\n      city: 'Parkersburg',\n      street: '2849 Fulton Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_3.png',\n    createdAt: 1555016400000,\n    email: 'ekaterina.tankova@devias.io',\n    name: 'Ekaterina Tankova',\n    phone: '304-428-3097'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Bristow',\n      city: 'Iowa',\n      street: '1865  Pleasant Hill Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_4.png',\n    createdAt: 1555016400000,\n    email: 'cao.yu@devias.io',\n    name: 'Cao Yu',\n    phone: '712-351-5711'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Georgia',\n      city: 'Atlanta',\n      street: '4894  Lakeland Park Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_2.png',\n    createdAt: 1555016400000,\n    email: 'alexa.richardson@devias.io',\n    name: 'Alexa Richardson',\n    phone: '770-635-2682'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Ohio',\n      city: 'Dover',\n      street: '4158  Hedge Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_5.png',\n    createdAt: 1554930000000,\n    email: 'anje.keizer@devias.io',\n    name: 'Anje Keizer',\n    phone: '908-691-3242'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Texas',\n      city: 'Dallas',\n      street: '75247'\n    },\n    avatarUrl: '/static/images/avatars/avatar_6.png',\n    createdAt: 1554757200000,\n    email: 'clarke.gillebert@devias.io',\n    name: 'Clarke Gillebert',\n    phone: '972-333-4106'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Bakerfield',\n      street: '317 Angus Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_1.png',\n    createdAt: 1554670800000,\n    email: 'adam.denisov@devias.io',\n    name: 'Adam Denisov',\n    phone: '858-602-3409'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Redondo Beach',\n      street: '2188  Armbrester Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_7.png',\n    createdAt: 1554325200000,\n    email: 'ava.gregoraci@devias.io',\n    name: 'Ava Gregoraci',\n    phone: '415-907-2647'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Nevada',\n      city: 'Las Vegas',\n      street: '1798  Hickory Ridge Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_8.png',\n    createdAt: 1523048400000,\n    email: 'emilee.simchenko@devias.io',\n    name: 'Emilee Simchenko',\n    phone: '702-661-1654'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Michigan',\n      city: 'Detroit',\n      street: '3934  Wildrose Lane'\n    },\n    avatarUrl: '/static/images/avatars/avatar_9.png',\n    createdAt: 1554702800000,\n    email: 'kwak.seong.min@devias.io',\n    name: 'Kwak Seong-Min',\n    phone: '313-812-8947'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Utah',\n      city: 'Salt Lake City',\n      street: '368 Lamberts Branch Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_10.png',\n    createdAt: 1522702800000,\n    email: 'merrile.burgett@devias.io',\n    name: 'Merrile Burgett',\n    phone: '801-301-7894'\n  }\n];\n","import { DashboardLayout } from \"../components/dashboard-layout\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { theme } from \"../theme\";\nimport { Box, Container } from \"@mui/material\";\nimport { CustomerListResults } from \"../components/customer/customer-list-results\";\nimport { CustomerListToolbar } from \"../components/customer/customer-list-toolbar\";\nimport { customers } from \"../__mocks__/customers\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getTypeProduct,reset } from \"../components/features/product/productSlice\";\n\nfunction Products() {\n  const {listTypeProduct}= useSelector((state=>state.product))\n  const dispatch = useDispatch()\n  useEffect(()=>{\n    dispatch(reset())\n    dispatch(getTypeProduct())\n  },[dispatch])\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <DashboardLayout>\n          {\n            <Box\n              component=\"main\"\n              sx={{\n                flexGrow: 1,\n                py: 8,\n              }}\n            >\n              <Container maxWidth={false}>\n                <CustomerListToolbar />\n                <Box sx={{ mt: 3 }}>\n                 {listTypeProduct!=null?( <CustomerListResults customers={listTypeProduct.data} />):null}\n                </Box>\n              </Container>\n            </Box>\n          }\n        </DashboardLayout>\n      </ThemeProvider>\n    </>\n  );\n}\nexport default Products;\n"],"names":["CustomerListResults","customers","rest","useState","selectedCustomerIds","limit","setLimit","page","setPage","formatDate","date","d","Date","getMonth","getDate","getFullYear","join","getHours","getMinutes","getSeconds","Card","Box","sx","minWidth","Table","TableHead","TableRow","TableCell","TableBody","slice","map","customer","hover","selected","indexOf","_id","to","alignItems","display","Typography","color","variant","name_type","createdAt","updatedAt","TablePagination","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","target","value","rowsPerPage","rowsPerPageOptions","CustomerListToolbar","props","justifyContent","flexWrap","m","Button","style","textDecoration","mt","uuid","listTypeProduct","useSelector","state","product","dispatch","useDispatch","useEffect","reset","getTypeProduct","ThemeProvider","theme","flexGrow","py","Container","maxWidth","data"],"sourceRoot":""}