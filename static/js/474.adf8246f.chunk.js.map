{"version":3,"file":"static/js/474.adf8246f.chunk.js","mappings":"+TA2HA,UAlGA,WACE,OAAqDA,EAAAA,EAAAA,KACnD,SAACC,GAAD,OAAWA,EAAMC,OAAjB,IADMC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,QAASC,EAAzC,EAAyCA,QAGnCC,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MAAPD,GAyBR,OAxBAE,EAAAA,EAAAA,YAAU,WACRC,SAASC,MAAQ,uCACjBN,GAASO,EAAAA,EAAAA,MACV,GAAE,CAACA,EAAAA,MACJH,EAAAA,EAAAA,YAAU,WACJF,GACFF,GAASQ,EAAAA,EAAAA,IAAmBN,GAE/B,GAAE,CAACF,EAAUE,KACdE,EAAAA,EAAAA,YAAU,WACLP,GACDY,EAAAA,GAAAA,QAAcV,EAAQA,SAErBD,GACDW,EAAAA,GAAAA,MAAYV,EAAQA,QAEvB,GAAC,CAACD,EAAQD,KAST,8BACkB,MAAfD,GACC,UAAC,IAAD,CAAec,MAAOA,EAAAA,EAAtB,WACE,SAAC,IAAD,WAEI,SAAC,IAAD,CACEC,UAAU,OACVC,GAAI,CACFC,SAAU,EACVC,GAAI,GAJR,UAOE,UAAC,IAAD,CAAWC,SAAS,KAApB,WACE,SAAC,IAAD,CAAYH,GAAI,CAAEI,GAAI,GAAKC,QAAQ,KAAnC,yDAGA,SAAC,KAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAA7B,UACE,iBAAMC,SA1BL,SAACC,GACpBA,EAAEC,iBACF1B,GAAS2B,EAAAA,EAAAA,IAAkB,CACzBzB,GAAIA,EACJ0B,UAAWH,EAAEI,OAAOD,UAAUE,QAEjC,EAoBmB,UACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAYxB,MAAM,kCAClB,SAAC,IAAD,KACA,SAAC,IAAD,WACE,SAAC,KAAD,CAAMY,WAAS,EAACC,QAAS,EAAzB,UACE,SAAC,KAAD,CAAMC,MAAI,EAACE,GAAI,GAAIC,GAAI,GAAvB,UACE,SAAC,IAAD,CACEQ,WAAS,EACTC,aAAcpC,EAAYqC,KAAKL,UAC/BM,MAAM,YACNC,KAAK,YACLlB,QAAQ,WACRmB,UAAQ,WAKhB,SAAC,IAAD,KACA,SAAC,IAAD,CACExB,GAAI,CACFyB,QAAS,OACTC,eAAgB,WAChBC,EAAG,GAJP,UAOE,SAAC,IAAD,CACEC,MAAM,UACNvB,QAAQ,YACRwB,KAAK,SAHP,yCAgBlB,SAAC,KAAD,OAEA,MAGT,C","sources":["pages/ProductTypeDetail.jsx"],"sourcesContent":["import { Container, Grid } from \"@mui/material\";\nimport { DashboardLayout } from \"../components/dashboard-layout\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { useFormik } from \"formik\";\nimport { theme } from \"../theme\";\nimport { useEffect } from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Divider,\n  Typography,\n  TextField,\n  CardHeader,\n} from \"@mui/material\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getTypeProductById,\n  reset,\n  updateTypeProduct,\n} from \"../components/features/product/productSlice\";\nimport { useParams } from \"react-router-dom\";\n\nfunction ProductTypeDetail() {\n  const { typeProduct, isSuccess, isError, message } = useSelector(\n    (state) => state.product\n  );\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  useEffect(() => {\n    document.title = \"Thêm loại sản phẩm\";\n    dispatch(reset());\n  }, [reset]);\n  useEffect(() => {\n    if (id) {\n      dispatch(getTypeProductById(id));\n    }\n  }, [dispatch, id]);\n  useEffect(()=>{\n    if(isSuccess){\n      toast.success(message.message)\n    }\n    if(isError){\n      toast.error(message.message)\n    }\n  },[isError,isSuccess])\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateTypeProduct({\n      id: id,\n      name_type: e.target.name_type.value\n    }))\n  };\n  return (\n    <>\n      {typeProduct != null ? (\n        <ThemeProvider theme={theme}>\n          <DashboardLayout>\n            {\n              <Box\n                component=\"main\"\n                sx={{\n                  flexGrow: 1,\n                  py: 8,\n                }}\n              >\n                <Container maxWidth=\"lg\">\n                  <Typography sx={{ mb: 3 }} variant=\"h4\">\n                    Chi tiết loại sản phẩm \n                  </Typography>\n                  <Grid container spacing={3}>\n                    <Grid item lg={8} md={6} xs={12}>\n                      <form onSubmit={handleSubmit}>\n                        <Card>\n                          <CardHeader title=\"Loại sản phẩm\" />\n                          <Divider />\n                          <CardContent>\n                            <Grid container spacing={3}>\n                              <Grid item md={12} xs={12}>\n                                <TextField\n                                  fullWidth\n                                  defaultValue={typeProduct.data.name_type}\n                                  label=\"Loại\"\n                                  name=\"name_type\"\n                                  variant=\"outlined\"\n                                  required\n                                />\n                              </Grid>\n                            </Grid>\n                          </CardContent>\n                          <Divider />\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              justifyContent: \"flex-end\",\n                              p: 2,\n                            }}\n                          >\n                            <Button\n                              color=\"primary\"\n                              variant=\"contained\"\n                              type=\"submit\"\n                            >\n                              Lưu\n                            </Button>\n                          </Box>\n                        </Card>\n                      </form>\n                    </Grid>\n                  </Grid>\n                </Container>\n              </Box>\n            }\n          </DashboardLayout>\n          <ToastContainer />\n        </ThemeProvider>\n      ) : null}\n    </>\n  );\n}\n\nexport default ProductTypeDetail;\n"],"names":["useSelector","state","product","typeProduct","isSuccess","isError","message","dispatch","useDispatch","id","useParams","useEffect","document","title","reset","getTypeProductById","toast","theme","component","sx","flexGrow","py","maxWidth","mb","variant","container","spacing","item","lg","md","xs","onSubmit","e","preventDefault","updateTypeProduct","name_type","target","value","fullWidth","defaultValue","data","label","name","required","display","justifyContent","p","color","type"],"sourceRoot":""}