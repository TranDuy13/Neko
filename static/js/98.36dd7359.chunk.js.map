{"version":3,"file":"static/js/98.36dd7359.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","pages/AddProduct.jsx","../node_modules/@mui/icons-material/CameraAlt.js"],"sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\n\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n\n  const {\n    disableSpacing = false,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import { Container, Grid } from \"@mui/material\";\nimport { DashboardLayout } from \"../components/dashboard-layout\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { useFormik } from \"formik\";\nimport { theme } from \"../theme\";\nimport { useEffect } from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  TextField,\n  CardHeader,\n} from \"@mui/material\";\nimport * as Yup from \"yup\";\nimport { useRef, useState } from \"react\";\nimport CameraAltIcon from \"@mui/icons-material/CameraAlt\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createProduct, getTypeProduct, reset } from \"../components/features/product/productSlice\";\nfunction AddProducts() {\n  const {listTypeProduct} = useSelector((state)=>state.product)\n  const [avatarPreview, setAvatarPreview] = useState();\n  const dispatch = useDispatch()\n  useEffect(() => {\n    document.title = \"Thêm sản phẩm\";\n    dispatch(reset())\n  },[reset]);\n  useEffect(()=>{\n    dispatch(getTypeProduct())\n  },[getTypeProduct])\n  const handleUpload = (e) => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setAvatarPreview(reader.result);\n      }\n    };\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n\n  const formik = useFormik({\n    initialValues: {\n      name_product: \"\",\n      type: \"\",\n      from: \"\",\n      code: \"\",\n      detail: \"\",\n      model: \"\",\n      brand: \"\",\n    },\n    onSubmit: (values) => {\n     values.imageProduct = avatarPreview\n     dispatch(createProduct(values))\n    },\n    validationSchema: Yup.object({\n      name_product: Yup.string().max(255).required(\"Tên sản phẩm là bắt buộc\"),\n      from: Yup.string().max(255).required(\"Loại của sản phẩm là bắt buộc\"),\n      code: Yup.string().max(255).required(\"Mã sản phẩm là bắt buộc.\"),\n      detail: Yup.string()\n        .max(2000)\n        .required(\"Mô tả chi tiết sản phẩm là bắt buộc.\"),\n      model: Yup.string().max(255).required(\"Model sản phẩm là bắt buộc.\"),\n      brand: Yup.string()\n        .max(255)\n        .required(\"Mô tả chi tiết sản phẩm là bắt buộc.\"),\n    }),\n  });\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <DashboardLayout>\n          {\n            <Box\n              component=\"main\"\n              sx={{\n                flexGrow: 1,\n                py: 8,\n              }}\n            >\n              <Container maxWidth=\"lg\">\n                <Typography sx={{ mb: 3 }} variant=\"h4\">\n                  Thêm sản phẩm\n                </Typography>\n                <Grid container spacing={3}>\n                  <Grid item lg={4} md={6} xs={12}>\n                    <Card>\n                      <CardContent>\n                        <Box\n                          sx={{\n                            alignItems: \"center\",\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                          }}\n                        >\n                          {avatarPreview != null ? (\n                            <img\n                              src={avatarPreview}\n                              className=\"w-[300px] h-[200px]\"\n                            />\n                          ) : (\n                            <CameraAltIcon\n                              src={avatarPreview}\n                              sx={{\n                                height: 64,\n                                mb: 2,\n                                width: 64,\n                              }}\n                            />\n                          )}\n                          <Typography\n                            color=\"textPrimary\"\n                            gutterBottom\n                            variant=\"h5\"\n                          ></Typography>\n                          <Typography\n                            color=\"textSecondary\"\n                            variant=\"body2\"\n                          ></Typography>\n                          <Typography\n                            color=\"textSecondary\"\n                            variant=\"body2\"\n                          ></Typography>\n                        </Box>\n                      </CardContent>\n                      <Divider />\n                      <CardActions>\n                        <Button color=\"primary\" fullWidth component=\"label\">\n                          Chèn ảnh sản phẩm\n                          <input\n                            type=\"file\"\n                            id=\"image-type-product\"\n                            onChange={handleUpload}\n                            style={{ display: \"none\" }}\n                          />\n                        </Button>\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                  <Grid item lg={8} md={6} xs={12}>\n                    <form onSubmit={formik.handleSubmit}>\n                      <Card>\n                        <CardHeader\n                          subheader=\"Sửa thông tin sản phẩm\"\n                          title=\"Sản phẩm\"\n                        />\n                        <Divider />\n                        <CardContent>\n                          <Grid container spacing={3}>\n                            <Grid item md={6} xs={12}>\n                              <TextField\n                                fullWidth\n                                error={Boolean(\n                                  formik.touched.name_product &&\n                                    formik.errors.name_product\n                                )}\n                                helperText={\n                                  formik.touched.name_product &&\n                                  formik.errors.name_product\n                                }\n                                label=\"Tên sản phẩm\"\n                                name=\"name_product\"\n                                onBlur={formik.handleBlur}\n                                onChange={formik.handleChange}\n                                variant=\"outlined\"\n                                required\n                                // defaultValue={user.data.admin.name}\n                              />\n                            </Grid>\n                            <Grid item md={6} xs={12}>\n                              <TextField\n                                fullWidth\n                                error={Boolean(\n                                  formik.touched.from && formik.errors.from\n                                )}\n                                helperText={\n                                  formik.touched.from && formik.errors.from\n                                }\n                                label=\"Xuất xứ\"\n                                name=\"from\"\n                                onBlur={formik.handleBlur}\n                                onChange={formik.handleChange}\n                                variant=\"outlined\"\n                                required\n                                // defaultValue={user.data.admin.name}\n                              />\n                            </Grid>\n                            <Grid item md={6} xs={12}>\n                              <TextField\n                                fullWidth\n                                error={Boolean(\n                                  formik.touched.brand && formik.errors.brand\n                                )}\n                                helperText={\n                                  formik.touched.brand && formik.errors.brand\n                                }\n                                label=\"Thương hiệu\"\n                                name=\"brand\"\n                                onBlur={formik.handleBlur}\n                                onChange={formik.handleChange}\n                                variant=\"outlined\"\n                                required\n                              />\n                            </Grid>\n                            <Grid item md={6} xs={12}>\n                              <TextField\n                                fullWidth\n                                error={Boolean(\n                                  formik.touched.model && formik.errors.model\n                                )}\n                                helperText={\n                                  formik.touched.model && formik.errors.model\n                                }\n                                label=\"Model\"\n                                name=\"model\"\n                                onBlur={formik.handleBlur}\n                                onChange={formik.handleChange}\n                                variant=\"outlined\"\n                                required\n                                // defaultValue={user.data.admin.name}\n                              />\n                            </Grid>\n                            <Grid item md={6} xs={12}>\n                              <TextField\n                                fullWidth\n                                error={Boolean(\n                                  formik.touched.code && formik.errors.code\n                                )}\n                                helperText={\n                                  formik.touched.code && formik.errors.code\n                                }\n                                label=\"Mã sản phẩm\"\n                                name=\"code\"\n                                onBlur={formik.handleBlur}\n                                onChange={formik.handleChange}\n                                variant=\"outlined\"\n                                required\n                              />\n                            </Grid>\n\n                            <Grid item md={6} xs={12}>\n                              <TextField\n                                fullWidth\n                                label=\"Loại sản phẩm\"\n                                name=\"type\"\n                                onChange={formik.handleChange}\n                                required\n                                select\n                                SelectProps={{ native: true }}\n                                variant=\"outlined\"\n                              >\n                                {listTypeProduct!=null?(listTypeProduct.data.map((option) => (\n                                  <option\n                                    key={option._id}\n                                    value={option.name_type}\n                                  >\n                                    {option.name_type}\n                                  </option>\n                                ))):null}\n                              </TextField>\n                            </Grid>\n                            <Grid item md={12} xs={12}>\n                              <TextField\n                                fullWidth\n                                error={Boolean(\n                                  formik.touched.detail && formik.errors.detail\n                                )}\n                                helperText={\n                                  formik.touched.detail && formik.errors.detail\n                                }\n                                label=\"Mô tả chi tiết sản phẩm\"\n                                name=\"detail\"\n                                onBlur={formik.handleBlur}\n                                onChange={formik.handleChange}\n                                variant=\"outlined\"\n                                required\n                                // defaultValue={user.data.admin.name}\n                              />\n                            </Grid>\n                          </Grid>\n                        </CardContent>\n                        <Divider />\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            justifyContent: \"flex-end\",\n                            p: 2,\n                          }}\n                        >\n                          <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            type=\"submit\"\n                          >\n                            Lưu sản phẩm\n                          </Button>\n                        </Box>\n                      </Card>\n                    </form>\n                  </Grid>\n                </Grid>\n              </Container>\n            </Box>\n          }\n        </DashboardLayout>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default AddProducts;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"3.2\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 2 7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n}, \"1\")], 'CameraAlt');\n\nexports.default = _default;"],"names":["getCardActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionsRoot","styled","name","overridesResolver","props","styles","ownerState","root","disableSpacing","spacing","_extends","display","alignItems","padding","marginLeft","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","listTypeProduct","useSelector","state","product","useState","avatarPreview","setAvatarPreview","dispatch","useDispatch","useEffect","document","title","reset","getTypeProduct","formik","useFormik","initialValues","name_product","type","from","code","detail","model","brand","onSubmit","values","imageProduct","createProduct","validationSchema","Yup","max","required","ThemeProvider","theme","Box","component","sx","flexGrow","py","Container","maxWidth","Typography","mb","variant","Grid","container","item","lg","md","xs","Card","CardContent","flexDirection","src","CameraAlt","height","width","color","gutterBottom","Divider","Button","fullWidth","id","onChange","e","reader","FileReader","onload","readyState","result","readAsDataURL","target","files","style","handleSubmit","CardHeader","subheader","TextField","error","Boolean","touched","errors","helperText","label","onBlur","handleBlur","handleChange","select","SelectProps","native","data","map","option","value","name_type","_id","justifyContent","p","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","cx","cy","r","d"],"sourceRoot":""}